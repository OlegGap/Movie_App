{"ast":null,"code":"import _classCallCheck from \"/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/src/components/pages/Movies/MoviePage/MoviePageContainer.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchSuccessMovieById, fetchRecommendationsById } from '../../../../modules/operations';\nimport { getMovieByID, getRecommendations, getTrailersById, getCastByMovieId } from '../../../../modules/selectors';\nimport MoviePageView from './MoviePageView';\nimport styles from './MoviePage.module.css';\n\nvar MoviePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MoviePage, _Component);\n\n  function MoviePage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MoviePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MoviePage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      option: 'recommendations'\n    };\n\n    _this.handleChoseOption = function (e) {\n      return _this.setState({\n        option: e.target.attributes.getNamedItem('data-partUrl').value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MoviePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchSuccessMovieById(this.props.match.params.id);\n      this.props.fetchRecommendationsById(this.props.match.params.id, this.state.option);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var option = this.state.option;\n\n      if (this.props.match.params.id !== prevProps.match.params.id) {\n        this.props.fetchSuccessMovieById(this.props.match.params.id);\n        this.props.fetchRecommendationsById(this.props.match.params.id, option);\n      }\n\n      if (option !== prevState.option) {\n        this.props.fetchRecommendationsById(this.props.match.params.id, option);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          movieById = _this$props.movieById,\n          recommendations = _this$props.recommendations,\n          trailers = _this$props.trailers,\n          actors = _this$props.actors;\n      var option = this.state.option;\n      return React.createElement(\"div\", {\n        className: styles.main__container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(MoviePageView, {\n        movieById: movieById,\n        recommendations: recommendations,\n        trailers: trailers,\n        actors: actors,\n        choseOption: this.handleChoseOption,\n        option: option,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MoviePage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movieById: getMovieByID(state),\n    recommendations: getRecommendations(state),\n    trailers: getTrailersById(state),\n    actors: getCastByMovieId(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  fetchSuccessMovieById: fetchSuccessMovieById,\n  fetchRecommendationsById: fetchRecommendationsById\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviePage);","map":{"version":3,"sources":["/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/src/components/pages/Movies/MoviePage/MoviePageContainer.jsx"],"names":["React","Component","connect","fetchSuccessMovieById","fetchRecommendationsById","getMovieByID","getRecommendations","getTrailersById","getCastByMovieId","MoviePageView","styles","MoviePage","state","option","handleChoseOption","e","setState","target","attributes","getNamedItem","value","props","match","params","id","prevProps","prevState","movieById","recommendations","trailers","actors","main__container","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  fetchSuccessMovieById,\r\n  fetchRecommendationsById,\r\n} from '../../../../modules/operations';\r\nimport {\r\n  getMovieByID,\r\n  getRecommendations,\r\n  getTrailersById,\r\n  getCastByMovieId,\r\n} from '../../../../modules/selectors';\r\n\r\nimport MoviePageView from './MoviePageView';\r\nimport styles from './MoviePage.module.css';\r\n\r\nclass MoviePage extends Component {\r\n  state = {\r\n    option: 'recommendations',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchSuccessMovieById(this.props.match.params.id);\r\n    this.props.fetchRecommendationsById(\r\n      this.props.match.params.id,\r\n      this.state.option,\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { option } = this.state;\r\n    if (this.props.match.params.id !== prevProps.match.params.id) {\r\n      this.props.fetchSuccessMovieById(this.props.match.params.id);\r\n      this.props.fetchRecommendationsById(this.props.match.params.id, option);\r\n    }\r\n    if (option !== prevState.option) {\r\n      this.props.fetchRecommendationsById(this.props.match.params.id, option);\r\n    }\r\n  }\r\n\r\n  handleChoseOption = e =>\r\n    this.setState({\r\n      option: e.target.attributes.getNamedItem('data-partUrl').value,\r\n    });\r\n\r\n  render() {\r\n    const { movieById, recommendations, trailers, actors } = this.props;\r\n    const { option } = this.state;\r\n    return (\r\n      <div className={styles.main__container}>\r\n        <MoviePageView\r\n          movieById={movieById}\r\n          recommendations={recommendations}\r\n          trailers={trailers}\r\n          actors={actors}\r\n          choseOption={this.handleChoseOption}\r\n          option={option}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movieById: getMovieByID(state),\r\n  recommendations: getRecommendations(state),\r\n  trailers: getTrailersById(state),\r\n  actors: getCastByMovieId(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  fetchSuccessMovieById,\r\n  fetchRecommendationsById,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(MoviePage);\r\n"]},"metadata":{},"sourceType":"module"}