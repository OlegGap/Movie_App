{"ast":null,"code":"var _jsxFileName = \"/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/src/components/pages/Movies/MoviesView.jsx\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport Loader from 'react-loader-spinner';\nimport styles from './Movies.module.css';\nimport myPhoto from './img/my.jpg';\n\nvar color = function color(el) {\n  if (el < 5) return 'orangered';\n  if (el < 8) return '#55dd44';\n  return 'blue';\n};\n\nvar MoviesView = function MoviesView(_ref) {\n  var movies = _ref.movies;\n  return React.createElement(\"ul\", {\n    className: styles.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, movies && movies.map(function (el) {\n    return React.createElement(\"li\", {\n      className: styles.item,\n      key: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: styles.moreInfo,\n      to: \"/movieId/\".concat(el.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.topInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.titleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \" \", el.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, el.release_date)), React.createElement(\"div\", {\n      className: styles.CircularProgressbar__container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(CircularProgressbar, {\n      percentage: el.vote_average * 10,\n      variant: \"determinate\",\n      text: \"\".concat(el.vote_average),\n      background: true,\n      backgroundPadding: 5,\n      styles: {\n        background: {\n          fill: 'transparent'\n        },\n        text: {\n          fill: color(el.vote_average),\n          fontSize: '25px',\n          transform: 'translate(-18px, 6px)',\n          fontWeight: '700'\n        },\n        path: {\n          stroke: color(el.vote_average)\n        },\n        trail: {\n          stroke: 'transparent'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }))), el.poster_path ? React.createElement(\"img\", {\n      src: \"https://image.tmdb.org/t/p/w300\".concat(el.poster_path),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      className: styles.myPhoto,\n      src: myPhoto,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }), movies && movies.length ? null : React.createElement(\"div\", {\n    className: styles.notFounded__container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    type: \"Oval\",\n    color: \"#ff4400\",\n    height: \"150\",\n    width: \"150\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n};\n\nexport default MoviesView;","map":{"version":3,"sources":["/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/src/components/pages/Movies/MoviesView.jsx"],"names":["React","NavLink","CircularProgressbar","Loader","styles","myPhoto","color","el","MoviesView","movies","list","map","item","id","moreInfo","topInfo","titleContainer","title","release_date","CircularProgressbar__container","vote_average","background","fill","text","fontSize","transform","fontWeight","path","stroke","trail","poster_path","length","notFounded__container"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CircularProgressbar from 'react-circular-progressbar';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Movies.module.css';\r\nimport myPhoto from './img/my.jpg';\r\n\r\nconst color = el => {\r\n  if (el < 5) return 'orangered';\r\n  if (el < 8) return '#55dd44';\r\n  return 'blue';\r\n};\r\n\r\nconst MoviesView = ({ movies }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {movies &&\r\n        movies.map(el => (\r\n          <li className={styles.item} key={el.id}>\r\n            <NavLink className={styles.moreInfo} to={`/movieId/${el.id}`}>\r\n              <div className={styles.topInfo}>\r\n                <div className={styles.titleContainer}>\r\n                  <h2 className={styles.title}> {el.title}</h2>\r\n                  <p>{el.release_date}</p>\r\n                </div>\r\n                <div className={styles.CircularProgressbar__container}>\r\n                  <CircularProgressbar\r\n                    percentage={el.vote_average * 10}\r\n                    variant=\"determinate\"\r\n                    text={`${el.vote_average}`}\r\n                    background\r\n                    backgroundPadding={5}\r\n                    styles={{\r\n                      background: {\r\n                        fill: 'transparent',\r\n                      },\r\n                      text: {\r\n                        fill: color(el.vote_average),\r\n                        fontSize: '25px',\r\n                        transform: 'translate(-18px, 6px)',\r\n                        fontWeight: '700',\r\n                      },\r\n                      path: {\r\n                        stroke: color(el.vote_average),\r\n                      },\r\n                      trail: { stroke: 'transparent' },\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n              {el.poster_path ? (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w300${el.poster_path}`}\r\n                  alt=\"\"\r\n                />\r\n              ) : (\r\n                <img className={styles.myPhoto} src={myPhoto} alt=\"\" />\r\n              )}\r\n\r\n              {/* <p className={styles.overview}>{el.overview}</p> */}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      {movies && movies.length ? null : (\r\n        <div className={styles.notFounded__container}>\r\n          <Loader type=\"Oval\" color=\"#ff4400\" height=\"150\" width=\"150\" />\r\n        </div>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MoviesView;\r\n"]},"metadata":{},"sourceType":"module"}