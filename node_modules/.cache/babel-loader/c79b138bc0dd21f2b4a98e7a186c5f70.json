{"ast":null,"code":"import types from './actionTypes';\nexport var fetchPopularRequest = function fetchPopularRequest() {\n  return {\n    type: types.FETCH_REQUEST_POPULAR\n  };\n};\nexport var fetchPopularSeccess = function fetchPopularSeccess(data) {\n  return {\n    type: types.FETCH_SUCCESS_POPULAR,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var fetchPopularError = function fetchPopularError(error) {\n  return {\n    type: types.FETCH_ERROR_POPULAR,\n    payload: {\n      error: error\n    }\n  };\n}; // for movie page\n\nexport var fetchMovieByIdRequest = function fetchMovieByIdRequest() {\n  return {\n    type: types.FETCH_REQUEST_MOVIE_BY_ID\n  };\n};\nexport var fetchMovieByIdSeccess = function fetchMovieByIdSeccess(data) {\n  return {\n    type: types.FETCH_SUCCESS_MOVIE_BY_ID,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var fetchMovieByIdError = function fetchMovieByIdError(error) {\n  return {\n    type: types.FETCH_ERROR_MOVIE_BY_ID,\n    payload: {\n      error: error\n    }\n  };\n}; // for genres\n\nexport var fetchGenresRequest = function fetchGenresRequest() {\n  return {\n    type: types.FETCH_REQUEST_GENRES\n  };\n};\nexport var fetchGenresSeccess = function fetchGenresSeccess(data) {\n  return {\n    type: types.FETCH_SUCCESS_GENRES,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var fetchGenresError = function fetchGenresError(error) {\n  return {\n    type: types.FETCH_ERROR_GENRES,\n    payload: {\n      error: error\n    }\n  };\n}; // for search movie\n\nexport var fetchSearchMovieRequest = function fetchSearchMovieRequest() {\n  return {\n    type: types.FETCH_REQUEST_SEARCH_MOVIE\n  };\n};\nexport var fetchSearchMovieSeccess = function fetchSearchMovieSeccess(data) {\n  return {\n    type: types.FETCH_SUCCESS_SEARCH_MOVIE,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var fetchSearchMovieError = function fetchSearchMovieError(error) {\n  return {\n    type: types.FETCH_ERROR_SEARCH_MOVIE,\n    payload: {\n      error: error\n    }\n  };\n}; // for recommendations movie by id\n\nexport var fetchRecommendationsMovieRequest = function fetchRecommendationsMovieRequest() {\n  return {\n    type: types.FETCH_REQUEST_REACOMMENDATIONS\n  };\n};\nexport var fetchRecommendationsMovieSeccess = function fetchRecommendationsMovieSeccess(data) {\n  return {\n    type: types.FETCH_SUCCESS_REACOMMENDATIONS,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var fetchRecommendationsMovieError = function fetchRecommendationsMovieError(error) {\n  return {\n    type: types.FETCH_ERROR_REACOMMENDATIONS,\n    payload: {\n      error: error\n    }\n  };\n}; // for actor info\n\nexport var fetchActorInfoRequest = function fetchActorInfoRequest() {\n  return {\n    type: types.FETCH_REQUEST_ACTORS_INFO\n  };\n};\nexport var fetchActorInfoSeccess = function fetchActorInfoSeccess(data) {\n  return {\n    type: types.FETCH_SUCCESS_ACTORS_INFO,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var fetchActorInfoError = function fetchActorInfoError(error) {\n  return {\n    type: types.FETCH_ERROR_ACTORS_INFO,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/src/modules/moviesActions.js"],"names":["types","fetchPopularRequest","type","FETCH_REQUEST_POPULAR","fetchPopularSeccess","data","FETCH_SUCCESS_POPULAR","payload","fetchPopularError","error","FETCH_ERROR_POPULAR","fetchMovieByIdRequest","FETCH_REQUEST_MOVIE_BY_ID","fetchMovieByIdSeccess","FETCH_SUCCESS_MOVIE_BY_ID","fetchMovieByIdError","FETCH_ERROR_MOVIE_BY_ID","fetchGenresRequest","FETCH_REQUEST_GENRES","fetchGenresSeccess","FETCH_SUCCESS_GENRES","fetchGenresError","FETCH_ERROR_GENRES","fetchSearchMovieRequest","FETCH_REQUEST_SEARCH_MOVIE","fetchSearchMovieSeccess","FETCH_SUCCESS_SEARCH_MOVIE","fetchSearchMovieError","FETCH_ERROR_SEARCH_MOVIE","fetchRecommendationsMovieRequest","FETCH_REQUEST_REACOMMENDATIONS","fetchRecommendationsMovieSeccess","FETCH_SUCCESS_REACOMMENDATIONS","fetchRecommendationsMovieError","FETCH_ERROR_REACOMMENDATIONS","fetchActorInfoRequest","FETCH_REQUEST_ACTORS_INFO","fetchActorInfoSeccess","FETCH_SUCCESS_ACTORS_INFO","fetchActorInfoError","FETCH_ERROR_ACTORS_INFO"],"mappings":"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","sourcesContent":["import types from './actionTypes';\n\nexport const fetchPopularRequest = () => ({\n  type: types.FETCH_REQUEST_POPULAR,\n});\n\nexport const fetchPopularSeccess = data => ({\n  type: types.FETCH_SUCCESS_POPULAR,\n\n  payload: {\n    data,\n  },\n});\n\nexport const fetchPopularError = error => ({\n  type: types.FETCH_ERROR_POPULAR,\n\n  payload: {\n    error,\n  },\n});\n\n// for movie page\n\nexport const fetchMovieByIdRequest = () => ({\n  type: types.FETCH_REQUEST_MOVIE_BY_ID,\n});\n\nexport const fetchMovieByIdSeccess = data => ({\n  type: types.FETCH_SUCCESS_MOVIE_BY_ID,\n  payload: {\n    data,\n  },\n});\n\nexport const fetchMovieByIdError = error => ({\n  type: types.FETCH_ERROR_MOVIE_BY_ID,\n\n  payload: {\n    error,\n  },\n});\n\n// for genres\n\nexport const fetchGenresRequest = () => ({\n  type: types.FETCH_REQUEST_GENRES,\n});\n\nexport const fetchGenresSeccess = data => ({\n  type: types.FETCH_SUCCESS_GENRES,\n\n  payload: {\n    data,\n  },\n});\n\nexport const fetchGenresError = error => ({\n  type: types.FETCH_ERROR_GENRES,\n\n  payload: {\n    error,\n  },\n});\n\n// for search movie\n\nexport const fetchSearchMovieRequest = () => ({\n  type: types.FETCH_REQUEST_SEARCH_MOVIE,\n});\n\nexport const fetchSearchMovieSeccess = data => ({\n  type: types.FETCH_SUCCESS_SEARCH_MOVIE,\n\n  payload: {\n    data,\n  },\n});\n\nexport const fetchSearchMovieError = error => ({\n  type: types.FETCH_ERROR_SEARCH_MOVIE,\n\n  payload: {\n    error,\n  },\n});\n\n// for recommendations movie by id\n\nexport const fetchRecommendationsMovieRequest = () => ({\n  type: types.FETCH_REQUEST_REACOMMENDATIONS,\n});\n\nexport const fetchRecommendationsMovieSeccess = data => ({\n  type: types.FETCH_SUCCESS_REACOMMENDATIONS,\n\n  payload: {\n    data,\n  },\n});\n\nexport const fetchRecommendationsMovieError = error => ({\n  type: types.FETCH_ERROR_REACOMMENDATIONS,\n\n  payload: {\n    error,\n  },\n});\n\n// for actor info\n\nexport const fetchActorInfoRequest = () => ({\n  type: types.FETCH_REQUEST_ACTORS_INFO,\n});\n\nexport const fetchActorInfoSeccess = data => ({\n  type: types.FETCH_SUCCESS_ACTORS_INFO,\n\n  payload: {\n    data,\n  },\n});\n\nexport const fetchActorInfoError = error => ({\n  type: types.FETCH_ERROR_ACTORS_INFO,\n\n  payload: {\n    error,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}