{"ast":null,"code":"var _jsxFileName = \"/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/src/components/pages/Actor/ActorView.jsx\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport CircularProgressbar from 'react-circular-progressbar';\nimport myPhoto from '../Movies/img/my.jpg';\nimport styles from './Actor.module.css';\nimport Header from '../Header/HeaderContainer/HeaderContainer';\n\nvar color = function color(el) {\n  if (el < 5) return 'orangered';\n  if (el < 8) return '#55dd44';\n  return 'blue';\n};\n\nvar ActorView = function ActorView(_ref) {\n  var actor = _ref.actor;\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, actor && React.createElement(\"div\", {\n    className: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.actor__topInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: styles.actor__name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, actor.name), React.createElement(\"img\", {\n    className: styles.actor__img,\n    src: \"https://image.tmdb.org/t/p/w300\".concat(actor.profile_path),\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: styles.moives__section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: styles.moives__section__title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Known For\"), React.createElement(\"ul\", {\n    className: styles.list,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, actor.known_for.map(function (el) {\n    return React.createElement(\"li\", {\n      className: styles.item,\n      key: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: styles.item__navlink,\n      to: \"/movieId/\".concat(el.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.topInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.titleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" \", el.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, el.release_date)), React.createElement(\"div\", {\n      className: styles.CircularProgressbar__container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(CircularProgressbar, {\n      percentage: el.vote_average * 10,\n      variant: \"determinate\",\n      text: \"\".concat(el.vote_average),\n      background: true,\n      backgroundPadding: 5,\n      styles: {\n        background: {\n          fill: 'transparent'\n        },\n        text: {\n          fill: color(el.vote_average),\n          fontSize: '25px',\n          transform: 'translate(-18px, 6px)',\n          fontWeight: '700'\n        },\n        path: {\n          stroke: color(el.vote_average)\n        },\n        trail: {\n          stroke: 'transparent'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))), el.poster_path ? React.createElement(\"img\", {\n      src: \"https://image.tmdb.org/t/p/w200\".concat(el.poster_path),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      className: styles.myPhoto,\n      src: myPhoto,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }))))));\n};\n\nexport default ActorView;","map":{"version":3,"sources":["/Users/oleg/Documents/goit-new/react/moviwApp/Movie_App/src/components/pages/Actor/ActorView.jsx"],"names":["React","NavLink","CircularProgressbar","myPhoto","styles","Header","color","el","ActorView","actor","wrapper","container","actor__topInfo","actor__name","name","actor__img","profile_path","moives__section","moives__section__title","list","known_for","map","item","id","item__navlink","topInfo","titleContainer","title","release_date","CircularProgressbar__container","vote_average","background","fill","text","fontSize","transform","fontWeight","path","stroke","trail","poster_path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE,EAAI;AAClB,MAAIA,EAAE,GAAG,CAAT,EAAY,OAAO,WAAP;AACZ,MAAIA,EAAE,GAAG,CAAT,EAAY,OAAO,SAAP;AACZ,SAAO,MAAP;AACD,CAJD;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC/B,SACE,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACM,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,IACJ;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACO,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAER,MAAM,CAACS,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCJ,KAAK,CAACK,IAA1C,CADF,EAEE;AACE,IAAA,SAAS,EAAEV,MAAM,CAACW,UADpB;AAEE,IAAA,GAAG,2CAAoCN,KAAK,CAACO,YAA1C,CAFL;AAGE,IAAA,GAAG,EAAC,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASE;AAAS,IAAA,SAAS,EAAEZ,MAAM,CAACa,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEb,MAAM,CAACc,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAI,IAAA,SAAS,EAAEd,MAAM,CAACe,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACW,SAAN,CAAgBC,GAAhB,CAAoB,UAAAd,EAAE;AAAA,WACrB;AAAI,MAAA,SAAS,EAAEH,MAAM,CAACkB,IAAtB;AAA4B,MAAA,GAAG,EAAEf,EAAE,CAACgB,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAEnB,MAAM,CAACoB,aADpB;AAEE,MAAA,EAAE,qBAAcjB,EAAE,CAACgB,EAAjB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAEnB,MAAM,CAACqB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAErB,MAAM,CAACsB,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAEtB,MAAM,CAACuB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA+BpB,EAAE,CAACoB,KAAlC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIpB,EAAE,CAACqB,YAAP,CAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAExB,MAAM,CAACyB,8BAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,mBAAD;AACE,MAAA,UAAU,EAAEtB,EAAE,CAACuB,YAAH,GAAkB,EADhC;AAEE,MAAA,OAAO,EAAC,aAFV;AAGE,MAAA,IAAI,YAAKvB,EAAE,CAACuB,YAAR,CAHN;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,iBAAiB,EAAE,CALrB;AAME,MAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EAAE;AADI,SADN;AAINC,QAAAA,IAAI,EAAE;AACJD,UAAAA,IAAI,EAAE1B,KAAK,CAACC,EAAE,CAACuB,YAAJ,CADP;AAEJI,UAAAA,QAAQ,EAAE,MAFN;AAGJC,UAAAA,SAAS,EAAE,uBAHP;AAIJC,UAAAA,UAAU,EAAE;AAJR,SAJA;AAUNC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAEhC,KAAK,CAACC,EAAE,CAACuB,YAAJ;AADT,SAVA;AAaNS,QAAAA,KAAK,EAAE;AAAED,UAAAA,MAAM,EAAE;AAAV;AAbD,OANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CAJF,EAkCG/B,EAAE,CAACiC,WAAH,GACC;AACE,MAAA,GAAG,2CACDjC,EAAE,CAACiC,WADF,CADL;AAIE,MAAA,GAAG,EAAC,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAQC;AAAK,MAAA,SAAS,EAAEpC,MAAM,CAACD,OAAvB;AAAgC,MAAA,GAAG,EAAEA,OAArC;AAA8C,MAAA,GAAG,EAAC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CJ,CADF,CADqB;AAAA,GAAtB,CADH,CAFF,CATF,CAFJ,CAFF,CADF;AA2ED,CA5ED;;AA6EA,eAAeK,SAAf","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CircularProgressbar from 'react-circular-progressbar';\r\nimport myPhoto from '../Movies/img/my.jpg';\r\nimport styles from './Actor.module.css';\r\n\r\nimport Header from '../Header/HeaderContainer/HeaderContainer';\r\n\r\nconst color = el => {\r\n  if (el < 5) return 'orangered';\r\n  if (el < 8) return '#55dd44';\r\n  return 'blue';\r\n};\r\n\r\nconst ActorView = ({ actor }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className={styles.wrapper}>\r\n        {actor && (\r\n          <div className={styles.container}>\r\n            <div className={styles.actor__topInfo}>\r\n              <h1 className={styles.actor__name}>{actor.name}</h1>\r\n              <img\r\n                className={styles.actor__img}\r\n                src={`https://image.tmdb.org/t/p/w300${actor.profile_path}`}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <section className={styles.moives__section}>\r\n              <h2 className={styles.moives__section__title}>Known For</h2>\r\n              <ul className={styles.list}>\r\n                {actor.known_for.map(el => (\r\n                  <li className={styles.item} key={el.id}>\r\n                    <NavLink\r\n                      className={styles.item__navlink}\r\n                      to={`/movieId/${el.id}`}\r\n                    >\r\n                      <div className={styles.topInfo}>\r\n                        <div className={styles.titleContainer}>\r\n                          <h2 className={styles.title}> {el.title}</h2>\r\n                          <p>{el.release_date}</p>\r\n                        </div>\r\n                        <div className={styles.CircularProgressbar__container}>\r\n                          <CircularProgressbar\r\n                            percentage={el.vote_average * 10}\r\n                            variant=\"determinate\"\r\n                            text={`${el.vote_average}`}\r\n                            background\r\n                            backgroundPadding={5}\r\n                            styles={{\r\n                              background: {\r\n                                fill: 'transparent',\r\n                              },\r\n                              text: {\r\n                                fill: color(el.vote_average),\r\n                                fontSize: '25px',\r\n                                transform: 'translate(-18px, 6px)',\r\n                                fontWeight: '700',\r\n                              },\r\n                              path: {\r\n                                stroke: color(el.vote_average),\r\n                              },\r\n                              trail: { stroke: 'transparent' },\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      {el.poster_path ? (\r\n                        <img\r\n                          src={`https://image.tmdb.org/t/p/w200${\r\n                            el.poster_path\r\n                          }`}\r\n                          alt=\"\"\r\n                        />\r\n                      ) : (\r\n                        <img className={styles.myPhoto} src={myPhoto} alt=\"\" />\r\n                      )}\r\n\r\n                      {/* <p className={styles.overview}>{el.overview}</p> */}\r\n                    </NavLink>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </section>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ActorView;\r\n"]},"metadata":{},"sourceType":"module"}